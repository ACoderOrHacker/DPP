name: Build

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:


jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, windows-2019]
        triplet: [x64-linux, x64-windows-release]
        compiler: [gcc, msvc]
        exclude:
          - os: windows-2019
            triplet: x64-windows-release
          - os: windows-2019
            triplet: x64-linux
          - os: windows-latest
            triplet: x64-linux
          - os: ubuntu-latest
            triplet: x64-windows-release
          - os: ubuntu-latest
            compiler: msvc
          - os: windows-latest
            compiler: gcc


    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up cmake
      uses: lukka/get-cmake@latest

    - name: Setup Cpp
      uses: aminya/setup-cpp@v1
      with:
        compiler: ${{matrix.compiler}}
        vcvarsall: ${{contains(matrix.os, 'windows')}}


    - name: vcpkg build
      uses: johnwason/vcpkg-action@v6
      id: vcpkg
      with:
        pkgs: boost-json boost-filesystem boost-serialization boost-program-options antlr4 fmt
        token: ${{ github.token }}
        triplet: ${{matrix.triplet}}
        github-binarycache: true

    - name: Build project
      run: |
        cd tools
        python build.py --debug --no-vcpkg-root ${{steps.vcpkg.outputs.vcpkg-cmake-config}} --build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: built-project
        path: ${{github.workspace}}/


